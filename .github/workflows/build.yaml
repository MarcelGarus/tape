name: Build, Test & Lint

on:
  push:
  pull_request:
  schedule:
    - cron: "0 4,11 * * *"

jobs:
  install-tape:
    name: Install tape dependencies
    runs-on: ubuntu-latest
    container:
      image: google/dart:2.7
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cd tape
          pub get

      - name: Persist current state
        uses: actions/upload-artifact@v1
        with:
          name: tape-source
          path: tape

  install-tapegen:
    name: Install tapegen dependencies
    needs: install-tape
    runs-on: ubuntu-latest
    container:
      image: google/dart:2.7
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cd tapegen
          pub get

      - name: Persist current state
        uses: actions/upload-artifact@v1
        with:
          name: tapegen-source
          path: tapegen

  test-tape:
    name: Run tape tests
    needs: install-tape
    runs-on: ubuntu-latest
    container:
      image: google/dart:2.7
    steps:
      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: tape-source

      - name: Install dependencies
        run: pub get

      - name: Run tests
        run: pub run test

  test-tapegen:
    name: Run tapegen tests
    needs: install-tapegen
    runs-on: ubuntu-latest
    container:
      image: google/dart:2.7
    steps:
      - name: Checkout source
        uses: actions/download-artifact@v2
        with:
          name: tapegen-source

      - name: Install dependencies
        run: pub get

      - name: Run tests
        run: pub run test

  tape-coverage:
    name: Tape coverage
    needs: install-tape
    runs-on: ubuntu-latest
    container:
      image: google/dart:2.7
    steps:
      - name: Checkout tape source
        uses: actions/download-artifact@v2
        with:
          name: tape-source

      - name: Install dependencies
        run: pub get

      - name: Collect coverage
        run: pub run test_coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  tapegen-coverage:
    name: Tapegen coverage
    needs: install-tapegen
    runs-on: ubuntu-latest
    container:
      image: google/dart:2.7
    steps:
      - name: Checkout tapegen source
        uses: actions/download-artifact@v2
        with:
          name: tapegen-source

      - name: Install dependencies
        run: pub get

      - name: Collect coverage
        run: pub run test_coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
  # lint:
  #   name: Lint
  #   needs: install
  #   runs-on: ubuntu-latest
  #   container:
  #     image: google/dart:2.7
  #   steps:
  #     - name: Checkout source
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: source
  #     - name: Install dependencies
  #       run: pub get
  #     - name: Run linter
  #       run: dartanalyzer . > analyze_report.txt
  #       continue-on-error: true
  #     - name: Install ruby
  #       uses: actions/setup-ruby@v1
  #       if: github.event_name == 'pull_request'
  #       with:
  #         ruby-version: "2.6"
  #     - name: Install ruby gems
  #       run: |
  #         gem install bundler
  #         bundle install --without documentation
  #       if: github.event_name == 'pull_request'
  #     - name: Run danger on generated report
  #       uses: MeilCli/danger-action@v1
  #       if: github.event_name == 'pull_request'
  #       with:
  #         danger_file: Dangerfile
  #         danger_id: "danger-pr"
  #       env:
  #         DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}
